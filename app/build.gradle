apply plugin: 'com.android.application'
apply plugin: 'com.frogermcs.androiddevmetrics'
apply plugin: 'android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply from: '../code_quality_tools/quality.gradle'
apply plugin: 'com.github.ben-manes.versions'
android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"
    defaultConfig {
        applicationId "com.d954mas.android.template"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // Make generated apks contain version name and code.
        archivesBaseName = "app-${android.defaultConfig.versionName}-${android.defaultConfig.versionName}"
        //region native code
        ndk {
            abiFilters "armeabi", "armeabi-v7a", "mips", "x86"
        }

        splits {
            abi {
                enable true
                reset()
                include 'armeabi', 'armeabi-v7a', 'mips', 'x86' //select ABIs to build APKs for
                universalApk false //generate an additional APK that contains all the ABIs
            }
        }
// map for the version code
        project.ext.versionCodes = ['armeabi': 1, 'armeabi-v7a': 2, 'mips': 5, 'x86': 8]

// Rename with proper versioning
        android.applicationVariants.all { variant ->
            // assign different version code for each output
            variant.outputs.each { output ->
                output.versionCodeOverride =
                        project.ext.versionCodes.get(output.getFilter(com.android.build.OutputFile.ABI), 0) *
                                1000000 +
                                android.defaultConfig.versionCode
            }
        }
//endregion
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    signingConfigs {
        yamblz {
            storeFile file('keystore.jks')
            storePassword 'yamblz'
            keyAlias 'yamblz'
            keyPassword 'yamblz'
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.yamblz
            applicationIdSuffix '.debug'
        }
        release {
            signingConfig signingConfigs.yamblz
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    lintOptions {
        // warningsAsErrors true
        lintConfig file("lint.xml")//fixed okhttp
        disable 'GoogleAppIndexingWarning' // BaseApp does not have deep linking.
        abortOnError true // Fail early.
    }
    dexOptions {
        javaMaxHeapSize "1g"
    }
    sourceSets { debug { java.srcDirs = ['src/debug/java', 'src/debug/java/2'] } }
}


ext {
    supportLib = '24.2.0'
}
dependencies {
    //region all
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$supportLib"
    compile "com.android.support:recyclerview-v7:$supportLib"
    compile "com.android.support:support-v4:$supportLib"
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    compile 'com.jakewharton.timber:timber:4.3.0'
    apt 'com.google.dagger:dagger-compiler:2.6.1'
    compile 'com.google.dagger:dagger:2.6.1'
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.google.code.gson:gson:2.7'
    //endregion
    //region debug
    debugCompile 'com.facebook.stetho:stetho:1.4.0'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    debugCompile 'com.jakewharton.scalpel:scalpel:1.1.2'
    debugCompile 'com.github.brianPlummer:tinydancer:0.0.9'
    debugCompile 'com.github.markzhai:blockcanary-android:1.3.1'
    //endregion
    //region test
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
    //endregion

}

configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:$supportLib"
    }
}

//./gradlew app:build -PdexCount
def dexCount = project.hasProperty('dexCount')
if (dexCount) {
    apply plugin: 'com.getkeepsafe.dexcount'

    dexcount {
        format = 'list'
        includeFieldCount = true
        includeTotalMethodCount = true
        orderByMethodCount = false
        verbose = true
        maxTreeDepth = Integer.MAX_VALUE
    }
}
